name: "EK Goveralls"
description: "Action for sending coverage data with goveralls"
author: "ESSENTIALKAOS"

branding:
  icon: 'percent'
  color: 'white'

inputs:
  profile:
    description: "Path to coverage profile"
    required: true

  path:
    description: "Path to directory with sources"
    required: true

  version:
    description: "Version of Goveralls"
    required: false
    default: "0.0.11"

  parallel:
    description: "Submit as parallel"
    required: false

  parallel-finished:
    description: "Mark parallel test as finished"
    required: false

  flag-name:
    description: "Job flag name (will be shown in the Coveralls UI)"
    required: false

  shallow:
    description: "Shallow coveralls internal server errors"
    required: false

runs:
  using: "composite"
  steps:
    - id: goveralls-bin-cache
      name: Cache goveralls binaries
      uses: actions/cache@v3
      with:
        path: ~/.cache/goveralls
        key: ${{runner.os}}-ek-goveralls-action-v${{inputs.version}}

    - id: goveralls-install
      name: Install Goveralls
      if: steps.goveralls-bin-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        # [goveralls-install]

        echo -e "::group::\033[34mInstalling Goveralls…\033[0m"
        mkdir -p ~/.cache
        go install "github.com/mattn/goveralls@v${{inputs.version}}"
        echo "::endgroup::"

        cp "$(go env GOPATH)/bin/goveralls" ~/.cache/goveralls

    - id: goveralls-set-options
      name: Set Goveralls options
      shell: bash
      run : |
        # [goveralls-set-options]

        declare -a options

        options+=("-service github")

        if [[ -z "${{inputs.parallel-finished}}" ]] ; then
          if [[ -n "${{inputs.parallel}}" ]] ; then
            options+=("-parallel")

            if [[ -n "${{inputs.flag-name}}" ]] ; then
              options+=("-flagname=${{inputs.flag-name}}")
            fi
          fi

          if [[ -n "${{inputs.shallow}}" ]] ; then
            options+=("-shallow")
          fi

          options+=("-coverprofile=${{inputs.profile}}")
        else
          options+=("-parallel-finish")
        fi

        echo -e "::group::\033[34mGoveralls configuration…\033[0m"
        if [[ ${#options[@]} -eq 0 ]] ; then
          echo "Options: -no-set-"
        else
          echo "Options: ${options[@]}"
        fi
        echo "::endgroup::"

        echo "options=${options[@]}" >> $GITHUB_OUTPUT

    - id: goveralls-send
      name: Send coverage data
      shell: bash
      run: |
        # [goveralls-send]

        if [[ -z "${{inputs.parallel-finished}}" ]] ; then
          if [[ -n "${{inputs.flag-name}}" ]] ; then
            echo -e "\033[34mSending coverage data (${{inputs.flag-name}})…\033[0m"
          else
            echo -e "\033[34mSending coverage data…\033[0m"
          fi
        else
          echo -e "\033[34mFinishing parallel test…\033[0m"
        fi

        cd ${{inputs.path}}
        ~/.cache/goveralls ${{steps.goveralls-set-options.outputs.options}}
